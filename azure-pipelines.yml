trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

pipeline:
- stage: deploy
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      vmImage: 'Ubuntu-latest'
    # creates an environment if it doesn't exist
    environment: 'plenv'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Hello world


# - task: DotNetCoreCLI@2
#   displayName: Build
#   inputs:
#     command: build
#     projects: '**/*.csproj'
#     arguments: '--configuration Release' # Update this to match your need

# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
#     artifactName: 'myWebsiteName'

# - task: AzureWebApp@1
#   displayName: 'Azure Web App Deploy'
#   inputs:
#     azureSubscription: 'pipelineenvtest'
#     appType: webAppLinux
#     appName: 'dzfwebtest20200430090607'
#     package: '**/*.zip'








# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) '
#     zipAfterPublish: True

# - task: AzureWebApp@1
#   displayName: 'Azure Web App Deploy'
#   inputs:
#     azureSubscription: 'pipelineenvtest'
#     appType: webAppLinux
#     appName: 'dzfwebtest20200430090607'
#     package: '**/*.zip'
